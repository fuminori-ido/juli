<h1>Juli, an offline wiki &amp; outliner with your favorite editor</h1>

This is top document for juli.  Introduction, installation and
juli formatting are described here.

(If you are reading index.txt in juli package after installing juli(1),
please run juli(1) as follows and read html/index.html by browser.
To change output directory from html/ to your favarite one,
please edit doc/.juli/config file):
  $ cd doc      # move to package's doc/ directory.
  $ juli init   # initialize doc as juli-repository.
  $ juli        # generate html files under html/
  # (Now, read html/index.html by any browser)


= Introduction

Do you want to make a memo anytime anyplace(like <b>offline</b> environment)?
Do you want to use your <b>favorite editor</b> for wiki and/or any documentation?
Do you want to organize your idea by <b>outline-processor</b> and/or <b>wiki</b>?
In wiki, Did you think it's much better to <b>link</b> page <b>automatically</b>?

If you say 'yes!' at least once, <b>juli</b> may be your choice.

I wanted to have such a tool.

== About Outline-processor

Outline-processor is good.
I prefer editor + outline-processing command wihch generates some
pretty output (like HTML, PDF, etc).

Outline-processor tells me the overview of what I'm
thinking.  However, many outline-processing tool is not enough for me because
usage (keybinding, etc.) is quite different from my favorite editor.

== GUI for read, but not for write

Outlining is necessary only when I want to browse so that it is enough
to generate HTML and toggle to show/hide any level of contents.
Current browser (Firefox, IE[789], etc.) has enough capability to do that.

I didn't want to have any other fancy GUI since browser+HTML is enough for me.

GUI tool like Word-processor or GUI outline-processor is slow to invoke
the app.
Key-bindings for such tools don't fit me.  Editor (vi, emacs, or wahtever
you are now using) is the most suitable for me to input.

== Offline

When I'm getting in a train and working/thinking on my Note-PC,
sometimes an idea comes up in my mind so I want to make the memo
as quick and easy as possible anyplace anytime.
In such a situation, using favorite editor is good for me to write.

== About Wiki

Wiki is good, but it requires online.
It is ok for me only to link on browsing time.
I would like to make a memo offline as well.

I don't want to think about "link it by WikiName, or, well,
What is the notation to link in this wiki tool?" when I'm
editing.
<a href='http://projects.gnome.org/tomboy/'>Tomboy</a> does so in realtime,
but I don't need such a realtime feature.
It's enough for me to link on browsing time.  So, some trigger
to generate auto-linked HTML covers this needs.

I looked for such a tool, 
<a href='http://projects.gnome.org/tomboy/'>Tomboy</a>,
<a href='http://www.evernote.com/'>Evernote</a>,
<a href='http://en.wikipedia.org/wiki/Microsoft_OneNote'>OneNote</a>,
but from keybinding point of view, those are not good...

== Offline wiki + git = best solution!

I know why almost all of wiki are online is because collaboration.
However, offline editing and collaboration is already realized.
One of good tool is <a href='http://git-scm.com/'>git</a>.

I'm thinking offline wiki + git is the best solution.

Isn't it time to create such a tool for me?

= Design

== Purpose

Purposes of juli are:

* write my idea as quick as possible by using my favorite editor at anytime anyplace.
* view outline.
* auto-link each memo together as wiki
* publishing by web server

== Feature

Current juli has the following features:

* toggle to show/hide each content.
* header numbering.
* bulk-mode update
* auto link between memo

Detail explanation for each feature is as follows:

=== toggle to show/hide each content
Chapter, section, sub-sction, ... can be hidden/shown by clicking headerline
or [+]/[-] node.  This is for outline viewing. 

=== header numbering
Header is automatically  numbered as chapter, section, and sub-section, ...
Currently there is no option to disable this numbering:-(

=== bulk-mode update

When just enter juli(1) command without any option and no file argument,
it searches whole juli-repository(explained below) and generates html
only for updated text files.

==== juli-repository

Juli-repository (or juli-repo, in short) is a directory which contains
several memos.
output HTML directory can be configured at any place at 'init' command
(explained at juli(1)).

=== auto link between memo

Similar to <a href='http://en.wikipedia.org/wiki/Wiki'>wiki</a>,
juli(1) creates links to another page when the source memo contains 
a <i>filename</i> (without .txt extention) and the <i>filename</i>.txt
exists.
Unlike usual wiki, juli(1) automatically generates this link.

Example:

When source memo contains following paragraph:

  Do you know 'hello world'?  It is a basic word in computing world.

and there is computing.txt file in the same directory, the memo will be:

  Do you know 'hello world'?  It is a basic word in <a href=#>computing</a> world.

and the 'computing' hyperlink referrs to the target page.

Restriction:
* file in subdirectory of juli-repo is not recognized as a wikiname.  I'll support this soon.
* Wikiname in HTML tag is not recognized as wiki link.

== Using with git (future plan)

Do you know <a href='http://git-scm.com/'>git</a>?
It is not only for programmer, but also for any file editor.
Git provides revision control of files, collaboration with other people.
Yes, it is very useful.

Currently juli is personal tool, but when files are controlled by git,
you can collaborate with other people as <b>online wiki</b>(like Wikipedia)
does.

I think juli + git provides both offline and online advantages.

Git has not been integrated to juli yet, but, of course if you know git,
you can use git to treat juli-repo.
 
= Install
== from gem
TBD

== from package
Prerequisites:
* rsync
* ruby-1.8

1. download package from http://sourceforge.net/projects/jjjuli/files/
1. run setup.rb as follows:

  $ tar zxvf juli-#.##.##.tgz
  $ cd juli-#.##.##
  $ ruby setup.rb                       # you may need 'sudo'

== from repository

Prerequisites:
* rsync
* ruby-1.8
* <a href='http://i.loveruby.net/en/projects/racc/'>racc</a>
* rake
* git

racc tool is required when you download from Sourceforge repository
and install it.

  $ git clone git://jjjuli.git.sourceforge.net/gitroot/jjjuli/jjjuli
  $ cd jjjuli
  $ rake                                # generate ruby source from *.y files
  $ ruby setup.rb                       # you may need 'sudo'

* prototype.js is used (included in this package).

= Juli Formatting

Juli document format syntax is a very small subset of
<a href='http://rubyforge.org/projects/rdtool/'>RD</a>, but
some syntax are a little bit of different.

== Header

Beggining '=' in line means header.  6 level headers can be used as follows:

1. '= Top level header title'
1. '== Second level header title'
1. '=== 3rd level header title'
1. '==== 4th level header title'
1. '===== 5th level header title'
1. '====== 6th level header title'

Example:


  = NAME
  juli    - Outline processor

  = SYNOPSIS
  juli [-g generator] file

will be what you see at juli(1) page...

== List
=== Ordered List

==== Basic
The line starts with "1. " (One dot space) is recognized as ordered list.
Not only '1' but also any number can be used.  However, actual assigned
numbers for ordered-list starts '1' and increments 1 for each. 

Example:

  |1. Hello
  |1. World
  |1. This is a pen.

will be:

1. Hello
1. World
1. This is a pen.

(Please ignore '|' above.  It just let juli(1) interpret to quote,
not ordered list).

==== Nested list
When putting leading spaces, it is interpreted as nested list.  Example:

  |1. Hello
  |  1. Welcome
  |  1. juli
  |1. World

will be:

1. Hello
  1. Welcome
  1. juli
1. World

(Where, please ignore '|' above).

==== Continued list
When length of a list becomes longer than editor window width,
next line can be the continued line of the list if it starts with the same
offset as follows:

  |A group is a set, G, together with an operation • (called the
  |group law of G) that combines any two elements a and b to form
  |another element, denoted a • b or ab. To qualify as a group,
  |the set and operation, (G, •), must satisfy four requirements
  |known as the group axioms:
  |
  |1. For all a, b in G, the result of the operation, a • b,
  |   is also in G.
  |1. For all a, b and c in G, (a • b) • c = a • (b • c).
  |1. There exists an element e in G, such that for every element a in G,
  |   the equation e • a = a • e = a holds.
  |   The identity element of a group G is often written as 1 or 1G,
  |   a notation inherited from the multiplicative identity.
  |1. For each a in G, there exists an element b in G such that
  |   a • b = b • a = 1G.
  |
  |(from http://en.wikipedia.org/wiki/Group_%28mathematics%29 )

will be:

<hr>
A group is a set, G, together with an operation • (called the
group law of G) that combines any two elements a and b to form
another element, denoted a • b or ab. To qualify as a group,
the set and operation, (G, •), must satisfy four requirements
known as the group axioms:

1. For all a, b in G, the result of the operation, a • b,
   is also in G.
1. For all a, b and c in G, (a • b) • c = a • (b • c).
1. There exists an element e in G, such that for every element a in G,
   the equation e • a = a • e = a holds.
   The identity element of a group G is often written as 1 or 1G,
   a notation inherited from the multiplicative identity.
1. For each a in G, there exists an element b in G such that
   a • b = b • a = 1G.

(from http://en.wikipedia.org/wiki/Group_%28mathematics%29 )
<hr>


(Where, please ignore '|' and &lt;hr&gt; line above.  Those are just
for explanation purpose).

=== Unordered List

The line starts with "* " (astarisk space) is recognized as unordered list.

==== Basic
Example:

  |* Hello
  |* World
  |* This is a pen.

will be:

* Hello
* World
* This is a pen.

==== Nested list
When putting leading spaces, it is interpreted as nested list.  Example:

  |* Hello
  |  * Welcome
  |  * juli
  |* World

will be:

* Hello
  * Welcome
  * juli
* World

(Where, please ignore '|' above).

==== Continued list

Same as ordrered list.  See ordered list.

=== Mixture of Ordered and Unordered list

Of course, both ordered and unordered list can be nested each other.
Example:

  |1. Hello
  |  * Welcome
  |  * juli
  |1. World

will be:

1. Hello
  * Welcome
  * juli
1. World

=== Compact Dictionary List

The line with the following form is recognized as compact dictionary list:

  term:: description
  ...

Example:

  Ruby::  programing language, or a gem
  Juli::  an offline wiki, July in English

will be:

Ruby::  programing language, or a gem
Juli::  an offline wiki, July in English

=== Dictionary List

The line with the following form is recognized as dictionary list:

  term::
    description statement
    description statement(continued)
  ...

Example:

  Ruby::
    programing language, or a gem
  Juli::
    an offline wiki, July in English, or
    a character in a famous comic written by Moto Hagio.

will be:

Ruby::
  programing language, or a gem
Juli::
  an offline wiki, July in English, or
  a character in a famous comic written by Moto Hagio.

== Block Quote

The line with leading spaces is recognized as blockquote.
Where, spaces should longer than Baseline.

Block Quote can contain WHITELINE.

Example:

  |   "The load to hell is paved with good intentions."
  |
  |   -- derived proverb from original thought of Saint Bernard of Clairvaux

will be:

  "The load to hell is paved with good intentions."

  -- derived proverb from original thought of Saint Bernard of Clairvaux

(Where, '|' above is to avoid deleting spaces.  Please ignore it.)

=== Block Quote and List

Block Quote can be written in list.

Example:

  |1. A
  |     B
  |   What did you do?
  |1. C

will be:

1. A
     B
   What did you do?
1. C

== URL autolink

When text contains URL like http://..., it is automatically hyperlinked.
Currently, http, https, mailto, and ftp are supported.

Example:

  Please look at http://w3c.org if you are not familiar with HTML.

will be:

Please look at http://w3c.org if you are not familiar with HTML.

== Escaping wikiname

\{...} notation escapes wikiname.  Example:

  \{tutorial}, in general meaning, shouldn't link to juli's tutorial docment.

will be:

\{tutorial}, in general meaning, shouldn't link to juli's tutorial docment.

NOTE: Following special cases are automatically escaped:

1. wikiname in tag.
1. wikiname in &lt;a&gt;...&lt;/a&gt; contents.

== HTML Extention

HTML tag can be written anyplace so you can use any html as follows:

* <i>Italic</i> by &lt;i&gt;Italic&lt;/i&gt;
* <b>Bold</b> by &lt;b&gt;Bold&lt;/b&gt;
* <u>Underline</u> by &lt;u&gt;Underline&lt;/u&gt;
* <s>Strikethrough</s> by &lt;s&gt;Strikethrough&lt;/s&gt;

=== Restriction

You can use any HTML. However, <b>juli markup syntax is higher priority</b>.
So, for example, tag nesting doesn't work because leading space at line is
recognized as blockquote.

Bad Example:

  |&lt;table&gt;
  |  &lt;tr&gt;&lt;td&gt;A&lt;/td&gt;&lt;td&gt;B&lt;/td&gt;&lt;/tr&gt;
  |  &lt;tr&gt;&lt;td&gt;C&lt;/td&gt;&lt;td&gt;D&lt;/td&gt;&lt;/tr&gt;
  |&lt;/table&gt;

(Where, '|' above is to avoid deleting spaces.  Please ignore it.)

= See Also

== Sub topics
Please read the followings for each topic:

tutorial::          Tutorial how to use juli.
je(1)::             je(1) command document
juli(1)::           juli(1) command document
juli_tb.rb(1)::     juli_tb.rb(1) command document
slidy::             Slideshow generator
takahashi_method::  Slideshow generator (Takahashi method version)
doc/app::           juli API document (generated by 'rake doc')
tips::              several Howto-s

== Competitor

I had researched several tools before starting juli project.
I also see similar tools since juli project started.

See <a href='compare.ods'>Comparison table</a> for the detail.

I found following competitor...:

* http://ikiwiki.info/
* http://gitit.net/
* https://github.com/github/gollum


== External Link
* http://en.wikipedia.org/wiki/Comparison_of_documentation_generators

= Misc
== Feedback

Any feedback is welcome.  Please check the followings:

* <a href='http://sourceforge.net/projects/jjjuli/reviews/'>Love/Hate</a>
* <a href='http://sourceforge.net/projects/jjjuli/forums'>Help</a>
* <a href='http://sourceforge.net/tracker/?group_id=390715'>Bug Report, Feature Requests</a>

== Author
Fumisky Wells, https://sourceforge.net/users/fwells00

== License

You can use/re-distribute/change juli under GPL.
This distribution include files that are copyrighted by
somebody else, and these files can be re-distributed under those own
license.
These files include the condition of those licenses in themselves.
