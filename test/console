#!/usr/bin/env ruby
#
# coding: UTF-8
#
# = NAME
# console     - irb with Juli modules/classes
#
# = SYNOPSIS
# test/console
#
# = DESCRIPTION
# interactivly use juli modules/classes.
#
# This is, of course, inspired from Rails script/console ;-)
#
# = EXAMPLE
#
# 1. call helper
#     $ test/console
#     >> h = Juli::Visitor::Html.new
#     >> h.content_tag(:div, 'hello')     # call ..Html::TagHelper method
# 1. dump tag DB
#     $ test/console
#     >> Dir.chdir(ENV['JULI_REPO'])
#     >> include Juli::Util
#     >> t = Juli::Macro::Tag.new
#     >> t.dump
# 1. access conf
#     $ test/console
#     >> Juli::Util.conf['show_indent_toggle_button']
#

Dir.chdir('doc/')
$LOAD_PATH.insert(0, '../lib')
libs  = ' -r juli'
libs  <<' -r juli/command'
libs  <<' -r juli/visitor'
libs  <<' -r juli/absyn'
libs  <<' -r juli/visitor/html'
exec "irb -I ../lib #{libs}"
